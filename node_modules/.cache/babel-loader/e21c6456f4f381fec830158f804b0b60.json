{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/react app/agilecreditportal/src/components/Layout.tsx\";\nimport React, { useState, useRef } from \"react\";\nimport Header from \"./Header\";\nimport SideBar from \"./SideBar\";\nimport Footer from \"./Footer\";\nimport \"../assets/custom.css\";\n\nfunction Layout(props) {\n  const [navOpen, setNavopen] = useState(false);\n  const wrapperRef = useRef();\n\n  const openNav = ($value = true) => {\n    // let wrapper: any = wrapperRef.current;\n    // wrapper.classList.toggle(\"bg-green-800\");\n    $value ? setNavopen(false) : setNavopen(preVal => !preVal);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w-full m-auto relative h-full lg:flex bg-gradient-to-b from-blue-100 to-white md:bg-none md:bg-gray-100   lg:p-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(SideBar, {\n    navSideBarToggle: openNav(true),\n    navValue: navOpen,\n    refData: wrapperRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: navOpen ? \"bg-gray-400 opacity-50 z-auto relative\" : \"lg:w-10/12 lg:relative pt-12 lg:pt-0\",\n    onClick: () => navOpen ? openNav() : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    navBar: openNav,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, props.children), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default Layout;","map":{"version":3,"sources":["/Users/mac/Documents/react app/agilecreditportal/src/components/Layout.tsx"],"names":["React","useState","useRef","Header","SideBar","Footer","Layout","props","navOpen","setNavopen","wrapperRef","openNav","$value","preVal","children"],"mappings":";AAAA,OAAOA,KAAP,IAAuBC,QAAvB,EAAiCC,MAAjC,QAA+C,OAA/C;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAO,sBAAP;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAkC;AAChC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAMS,UAAU,GAAGR,MAAM,EAAzB;;AAEA,QAAMS,OAAO,GAAG,CAACC,MAAM,GAAG,IAAV,KAAmB;AACjC;AACA;AACAA,IAAAA,MAAM,GAAGH,UAAU,CAAC,KAAD,CAAb,GAAuBA,UAAU,CAAEI,MAAD,IAAY,CAACA,MAAd,CAAvC;AACD,GAJD;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,kHAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AACE,IAAA,gBAAgB,EAAEF,OAAO,CAAC,IAAD,CAD3B;AAEE,IAAA,QAAQ,EAAEH,OAFZ;AAGE,IAAA,OAAO,EAAEE,UAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAME;AACE,IAAA,SAAS,EACPF,OAAO,GACH,wCADG,GAEH,sCAJR;AAME,IAAA,OAAO,EAAE,MAAOA,OAAO,GAAGG,OAAO,EAAV,GAAe,IANxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQE,oBAAC,MAAD;AAAQ,IAAA,MAAM,EAAEA,OAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMJ,KAAK,CAACO,QAAZ,CATF,eAWE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CANF,CADF;AAsBD;;AAED,eAAeR,MAAf","sourcesContent":["import React, { Props, useState, useRef } from \"react\";\nimport Header from \"./Header\";\nimport SideBar from \"./SideBar\";\nimport Footer from \"./Footer\";\nimport \"../assets/custom.css\";\n\nfunction Layout(props: Props<{}>) {\n  const [navOpen, setNavopen] = useState(false);\n  const wrapperRef = useRef();\n\n  const openNav = ($value = true) => {\n    // let wrapper: any = wrapperRef.current;\n    // wrapper.classList.toggle(\"bg-green-800\");\n    $value ? setNavopen(false) : setNavopen((preVal) => !preVal);\n  };\n\n  return (\n    <div className=\"w-full m-auto relative h-full lg:flex bg-gradient-to-b from-blue-100 to-white md:bg-none md:bg-gray-100   lg:p-0\">\n      <SideBar\n        navSideBarToggle={openNav(true)}\n        navValue={navOpen}\n        refData={wrapperRef}\n      />\n      <div\n        className={\n          navOpen\n            ? \"bg-gray-400 opacity-50 z-auto relative\"\n            : \"lg:w-10/12 lg:relative pt-12 lg:pt-0\"\n        }\n        onClick={() => (navOpen ? openNav() : null)}\n      >\n        <Header navBar={openNav} />\n        <div>{props.children}</div>\n\n        <Footer />\n      </div>\n    </div>\n  );\n}\n\nexport default Layout;\n"]},"metadata":{},"sourceType":"module"}