{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/react app/agilecreditportal/src/components/FormInput.tsx\";\nimport React from \"react\";\nimport ReactDatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst FormInput = ({\n  label,\n  name,\n  required,\n  errors,\n  register,\n  type,\n  options,\n  value,\n  format = \"\",\n  Controller,\n  control\n}) => {\n  let inputType = null;\n\n  switch (type) {\n    case \"text\":\n      inputType = /*#__PURE__*/React.createElement(\"input\", {\n        className: \"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\",\n        id: \"grid-last-name\",\n        type: \"text\",\n        ref: register({\n          required\n        }),\n        name: name,\n        defaultValue: value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 9\n        }\n      });\n      break;\n\n    case \"email\":\n      inputType = /*#__PURE__*/React.createElement(\"input\", {\n        className: \"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\",\n        id: \"grid-last-name\",\n        type: \"email\",\n        ref: register({\n          required\n        }),\n        name: name,\n        defaultValue: value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }\n      });\n      break;\n\n    case \"boolean\":\n      inputType = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"flex \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"flex items-center cursor-pointer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"relative\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        id: \"toogleA\",\n        type: \"checkbox\",\n        name: name,\n        className: \"hidden\",\n        defaultValue: value,\n        ref: register({}),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"toggle__line w-10 h-4 bg-gray-400 rounded-full shadow-inner\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"toggle__dot absolute w-6 h-6 bg-white rounded-full shadow inset-y-0 left-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }\n      }))));\n      break;\n\n    case \"mobile\":\n    case \"phone\":\n      inputType = /*#__PURE__*/React.createElement(\"input\", {\n        className: \"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\",\n        id: \"grid-last-name\",\n        type: \"tel\",\n        ref: register({\n          required\n        }),\n        name: name,\n        defaultValue: value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }\n      });\n      break;\n\n    case \"number\":\n      inputType = /*#__PURE__*/React.createElement(\"input\", {\n        className: \"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\",\n        id: \"grid-last-name\",\n        type: \"number\",\n        ref: register({\n          required\n        }),\n        name: name,\n        defaultValue: value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }\n      });\n      break;\n\n    case \"date\":\n      if (format === \"Y\") {\n        var d = new Date();\n        value && d.setFullYear(value);\n        console.log(d);\n        inputType = value && /*#__PURE__*/React.createElement(Controller, {\n          control: control,\n          name: name,\n          rules: {\n            required\n          },\n          defaultValue: d,\n          render: ({\n            onChange,\n            onBlur,\n            value\n          }) => /*#__PURE__*/React.createElement(ReactDatePicker, {\n            onChange: onChange,\n            onBlur: onBlur,\n            selected: value,\n            showYearPicker: true,\n            yearItemNumber: 9,\n            dateFormat: \"yyyy\",\n            className: \"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }\n          }),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 11\n          }\n        });\n      } else {\n        inputType = /*#__PURE__*/React.createElement(\"input\", {\n          className: \"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\",\n          id: \"grid-last-name\",\n          type: \"date\",\n          ref: register({\n            required\n          }),\n          name: name // value={value}\n          ,\n          defaultValue: value,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 11\n          }\n        });\n      }\n\n      break;\n\n    case \"file\":\n      inputType = /*#__PURE__*/React.createElement(\"input\", {\n        type: \"file\",\n        ref: register({\n          required\n        }),\n        name: name,\n        className: \"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 9\n        }\n      }) // <input\n      //   className=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\n      //   id=\"grid-last-name\"\n      //   type=\"date\"\n      //   ref={register({ required })}\n      //   name={name}\n      // />\n      ;\n      break;\n\n    case \"select\":\n      inputType = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"relative\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"select\", {\n        className: \"block appearance-none w-full bg-gray-200 border border-gray-200 text-gray-700 py-3 px-4 pr-8 rounded leading-tight focus:outline-none focus:bg-white focus:border-gray-500\",\n        id: \"grid-state\",\n        ref: register({\n          required\n        }),\n        name: name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"option\", {\n        value: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }\n      }, \"- Select -\"), options && options.map((option, key) => {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          key: key,\n          value: option.value,\n          selected: option.value === value ? true : false,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 19\n          }\n        }, option.label);\n      })), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700 \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"svg\", {\n        className: \"fill-current h-4 w-4\",\n        xmlns: \"http://www.w3.org/2000/svg\",\n        viewBox: \"0 0 20 20\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"path\", {\n        d: \"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 15\n        }\n      }))));\n      break;\n\n    default:\n      inputType = /*#__PURE__*/React.createElement(\"input\", {\n        className: \"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\",\n        id: \"grid-last-name\",\n        type: \"text\",\n        ref: register({\n          required\n        }),\n        name: name,\n        defaultValue: value,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 9\n        }\n      });\n      break;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w-full md:w-1/2 px-3 mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }\n  }, label), inputType, errors[name] && errors[name].type === \"required\" && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-red-500 text-xs italic\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 9\n    }\n  }, \"Please fill out this field.\"));\n};\n\nexport default FormInput;","map":{"version":3,"sources":["/Users/mac/Documents/react app/agilecreditportal/src/components/FormInput.tsx"],"names":["React","ReactDatePicker","FormInput","label","name","required","errors","register","type","options","value","format","Controller","control","inputType","d","Date","setFullYear","console","log","onChange","onBlur","map","option","key"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport ReactDatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nconst FormInput = ({\n  label,\n  name,\n  required,\n  errors,\n  register,\n  type,\n  options,\n  value,\n  format = \"\",\n  Controller,\n  control,\n}) => {\n  let inputType: any = null;\n\n  switch (type) {\n    case \"text\":\n      inputType = (\n        <input\n          className=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\n          id=\"grid-last-name\"\n          type=\"text\"\n          ref={register({ required })}\n          name={name}\n          defaultValue={value}\n        />\n      );\n      break;\n    case \"email\":\n      inputType = (\n        <input\n          className=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\n          id=\"grid-last-name\"\n          type=\"email\"\n          ref={register({ required })}\n          name={name}\n          defaultValue={value}\n        />\n      );\n      break;\n    case \"boolean\":\n      inputType = (\n        <div className=\"flex \">\n          <label className=\"flex items-center cursor-pointer\">\n            <div className=\"relative\">\n              <input\n                id=\"toogleA\"\n                type=\"checkbox\"\n                name={name}\n                className=\"hidden\"\n                defaultValue={value}\n                ref={register({})}\n              />\n              <div className=\"toggle__line w-10 h-4 bg-gray-400 rounded-full shadow-inner\"></div>\n              <div className=\"toggle__dot absolute w-6 h-6 bg-white rounded-full shadow inset-y-0 left-0\"></div>\n            </div>\n          </label>\n        </div>\n      );\n      break;\n    case \"mobile\":\n    case \"phone\":\n      inputType = (\n        <input\n          className=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\n          id=\"grid-last-name\"\n          type=\"tel\"\n          ref={register({ required })}\n          name={name}\n          defaultValue={value}\n        />\n      );\n      break;\n    case \"number\":\n      inputType = (\n        <input\n          className=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\n          id=\"grid-last-name\"\n          type=\"number\"\n          ref={register({ required })}\n          name={name}\n          defaultValue={value}\n        />\n      );\n      break;\n    case \"date\":\n      if (format === \"Y\") {\n        var d = new Date();\n        value && d.setFullYear(value);\n        console.log(d);\n\n        inputType = value && (\n          <Controller\n            control={control}\n            name={name}\n            rules={{ required }}\n            defaultValue={d}\n            render={({ onChange, onBlur, value }) => (\n              <ReactDatePicker\n                onChange={onChange}\n                onBlur={onBlur}\n                selected={value}\n                showYearPicker\n                yearItemNumber={9}\n                dateFormat=\"yyyy\"\n                className=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\n              />\n            )}\n          />\n        );\n      } else {\n        inputType = (\n          <input\n            className=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\n            id=\"grid-last-name\"\n            type=\"date\"\n            ref={register({ required })}\n            name={name}\n            // value={value}\n            defaultValue={value}\n          />\n        );\n      }\n\n      break;\n    case \"file\":\n      inputType = (\n        <input\n          type=\"file\"\n          ref={register({ required })}\n          name={name}\n          className=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\n        />\n        // <input\n        //   className=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\n        //   id=\"grid-last-name\"\n        //   type=\"date\"\n        //   ref={register({ required })}\n        //   name={name}\n        // />\n      );\n      break;\n    case \"select\":\n      inputType = (\n        <div className=\"relative\">\n          <select\n            className=\"block appearance-none w-full bg-gray-200 border border-gray-200 text-gray-700 py-3 px-4 pr-8 rounded leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\n            id=\"grid-state\"\n            ref={register({ required })}\n            name={name}\n          >\n            <option value=\"\">- Select -</option>\n            {options &&\n              options.map((option, key) => {\n                return (\n                  <option\n                    key={key}\n                    value={option.value}\n                    selected={option.value === value ? true : false}\n                  >\n                    {option.label}\n                  </option>\n                );\n              })}\n          </select>\n          <div className=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700 \">\n            <svg\n              className=\"fill-current h-4 w-4\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 20 20\"\n            >\n              <path d=\"M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z\" />\n            </svg>\n          </div>\n        </div>\n      );\n      break;\n    default:\n      inputType = (\n        <input\n          className=\"appearance-none block w-full bg-gray-200 text-gray-700 border border-gray-200 rounded py-3 px-4 leading-tight focus:outline-none focus:bg-white focus:border-gray-500\"\n          id=\"grid-last-name\"\n          type=\"text\"\n          ref={register({ required })}\n          name={name}\n          defaultValue={value}\n        />\n      );\n      break;\n  }\n\n  return (\n    <div className=\"w-full md:w-1/2 px-3 mb-3\">\n      <label className=\"block uppercase tracking-wide text-gray-700 text-xs font-bold mb-2\">\n        {label}\n      </label>\n      {inputType}\n      {errors[name] && errors[name].type === \"required\" && (\n        <p className=\"text-red-500 text-xs italic\">\n          Please fill out this field.\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default FormInput;\n"]},"metadata":{},"sourceType":"module"}